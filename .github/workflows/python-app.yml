# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python CI

on:
  push:
    branches: 'main'
    paths:
     - 'github-actions/**'
  pull_request:
    branches: 'main'
    paths:
     - 'github-actions/**'
  workflow_dispatch:

jobs:
  tests:
    name: Testes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./github-actions

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      
      - name: 4. Instalar dependências com UV
        run: |
          pip install uv
          uv sync
      
      - name: Rodar Linter (Flake8) com UV
        run: uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Rodar Testes e Gerar Relatório
        run: uv run pytest -v --junitxml=test-report.xml

      - name: Salvar Relatório de Testes como Artefato
        uses: actions/upload-artifact@v4
        with:
          name: relatorio-de-testes
          path: github-actions/test-report.xml

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: tests
    defaults:
      run:
        working-directory: ./github-actions

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Instalar ferramenta de build
        run: pip install build

      - name: Construir o pacote
        run: python -m build

      - name: Salvar Pacote como Artefato
        uses: actions/upload-artifact@v4
        with:
          name: pacote-python
          path: github-actions/dist
  
  notify:
    name: Notificação
    runs-on: ubuntu-latest
    needs: tests  # pode rodar em paralelo ao build

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Executar script de notificação
        env:
          DEST_EMAIL: ${{ secrets.DEST_EMAIL }}
        run: | 
          sh scripts/shell.sh
          echo "E-mail enviado para $DEST_EMAIL"
        
